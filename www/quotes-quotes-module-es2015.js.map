{"version":3,"sources":["./src/app/pages/quotes/quotes.page.html","./src/app/pages/quotes/quotes-routing.module.ts","./src/app/pages/quotes/quotes.module.ts","./src/app/pages/quotes/quotes.page.scss","./src/app/pages/quotes/quotes.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,4gBAA6c,eAAe,uE;;;;;;;;;;;;;;;;;;;ACAlc;AACc;AAEZ;AAE3C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uDAAU;KACtB;CACF,CAAC;AAMF,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;AAA1B,uBAAuB;IAJnC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBK;AACM;AACF;AAEA;AAEqB;AAEvB;AAW3C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAG;AAAnB,gBAAgB;IAT5B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,8EAAuB;SACxB;QACD,YAAY,EAAE,CAAC,uDAAU,CAAC;KAC3B,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;ACnB7B;AAAe,6GAA8C,+I;;;;;;;;;;;;;;;;;;;ACAX;AACT;AAEe;AASxD,IAAa,UAAU,GAAvB,MAAa,UAAU;IAMnB,YAAoB,MAAc,EAAU,GAAe;QAAvC,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAY;QAF3D,WAAM,GAAM,EAAE,CAAC;IAEgD,CAAC;IAEhE,QAAQ;QACJ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7B,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,WAAW,CAAC,KAAK;QAEb,IAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,OAAO,CAAC,CAAC;IAClD,CAAC;IACD,MAAM,CAAC,KAAK;QACZ,6BAA6B;QAC7B,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7E,CAAC;CACF;;YApB+B,sDAAM;YAAe,gEAAU;;AANlD,UAAU;IANtB,+DAAS,CAAC;QACP,QAAQ,EAAE,YAAY;QACtB,kNAAiC;;KAEpC,CAAC;2EAQ8B,sDAAM,EAAe,gEAAU;GANlD,UAAU,CA0BtB;AA1BsB","file":"quotes-quotes-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<ion-title>Quotes</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\t<ion-searchbar name=\\\"search\\\" [(ngModel)]=\\\"search\\\" placeholder=\\\"Search by Author name\\\" cancelButtonText=\\\"Cancel\\\">\\n\\t</ion-searchbar>\\n\\t<ion-list>\\n\\t\\t<div *ngFor=\\\"let quote of quotes | async\\\">\\n\\t\\t\\t<ion-item *ngIf=\\\"filter(quote)\\\" button detail lines=\\\"inset\\\" (click)=\\\"openDetails(quote)\\\">\\n\\t\\t\\t\\t\\t<p>{{ quote.quote }}</p>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t</div>\\n\\n\\t</ion-list>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QuotesPage } from './quotes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuotesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QuotesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuotesPageRoutingModule } from './quotes-routing.module';\n\nimport { QuotesPage } from './quotes.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QuotesPageRoutingModule\n  ],\n  declarations: [QuotesPage]\n})\nexport class QuotesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3F1b3Rlcy9xdW90ZXMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../services/api.service';\n\n\n@Component({\n    selector: 'app-quotes',\n    templateUrl: './quotes.page.html',\n    styleUrls: ['./quotes.page.scss'],\n})\n\nexport class QuotesPage implements OnInit {\n\n    \n    quotes: Observable<any>;\n    search: any=\"\";\n\n    constructor(private router: Router, private api: ApiService) { }\n\n    ngOnInit() {\n        this.quotes = this.api.getQuotes();\n        this.quotes.subscribe(data => {\n        console.log('my data: ', data);\n        });\n    }\n\n\n    openDetails(quote) {\n        \n        let quoteId = quote.quote_id;\n        this.router.navigateByUrl(`/tabs/quotes/${quote.quote_id}`);\n        console.log('my dataQuoteDetails: ', quoteId);\n    }\n    filter(quote){\n    // console.log(death.author);\n    return quote.author.toLowerCase().indexOf(this.search.toLowerCase()) != -1;\n  }\n}"],"sourceRoot":"webpack:///"}